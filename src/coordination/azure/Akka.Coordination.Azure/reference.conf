akka.coordination.lease.azure {

    lease-class = "Akka.Coordination.Azure.AzureLease, Akka.Coordination.Azure"

    connection-string = ""
    
    # Container to create the lock in.
    container-name = "akka-coordination-lease"
    
    # How often to write time into CRD so that if the holder crashes
    # another node can take the lease after a given timeout. If left blank then the default is
    # max(5s, heartbeat-timeout / 10) which will be 12s with the default heartbeat-timeout
    heartbeat-interval = ""

    # How long a lease must not be updated before another node can assume the holder has crashed.
    # If the lease holder hasn't crashed its next heart beat will fail due to the version
    # having been updated
    heartbeat-timeout = 120s

    # The total time out value for a single lease operation
    lease-operation-timeout = 15s

    # The individual timeout for each HTTP request. Defaults to 2/5 of the lease-operation-timeout
    # Can't be greater than then lease-operation-timeout
    api-service-request-timeout = ""
}
